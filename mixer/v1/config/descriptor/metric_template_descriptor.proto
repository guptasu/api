// Copyright 2016 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package istio.mixer.v1.config.descriptor;

import "mixer/v1/config/descriptor/template_variety_descriptor.proto";
import "mixer/v1/config/descriptor/value_type.proto";

message MetricTemplate {
  string name = 1;

  // Optional. A concise name for the metric, which can be displayed in user
  // interfaces. Use sentence case without an ending period, for example
  // "Request count".
  string display_name = 2;

  // Optional. A description of the metric, which should be used as the
  // documentation for the metric.
  string description = 3;

/*
  // The kind of measurement. It describes how the data is recorded.
  enum MetricKind {
    // Do not use this default value.
    METRIC_KIND_UNSPECIFIED = 0;

    // An instantaneous measurement of a value. For example, the number of VMs.
    GAUGE = 1;

    // A count of occurrences over an interval, always a positive integer.
    // For example, the number of API requests.
    COUNTER = 2;

    // Summary statistics for a population of values. At the moment, only
    // histograms representing the distribution of those values across a set of
    // buckets are supported (configured via the buckets field).
    //
    // Values for DISTRIBUTIONs will be reported in singular form. It will be up
    // to the mixer adapters and backend systems to transform single reported
    // values into the distribution form as needed (and as supported).
    DISTRIBUTION = 3;
  }
  // Required. Whether the metric records instantaneous values, changes to a
  // value, etc.
  MetricKind kind = 4;
*/

  ValueType value = 6;
  map<string, ValueType> dimensions = 7; // aka labels

  TemplateVariety variety = 8;  // pre-condition or report?
}
